node n1 {
    type router
    model static
    network-config {
	hostname R1
	!
	interface eth3
	 ip address 157.122.18.1/24
	 ipv6 address 2001:0::1/64
	!
	interface eth0
	 ip address 157.122.95.1/24
	!
	interface eth2
	 ip address 157.122.27.1/24
	!
	interface eth1
	 ip address 157.122.33.1/24
	!
    }
    canvas c1
    iconcoords {393.0 192.0}
    labelcoords {393.0 160.0}
    interface-peer {eth1 n6}
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	# ip route add default via 157.122.95.1
	# ip route add default via 157.122.33.1
	# ip route add default via 157.122.27.1
	# ip route add default via 157.122.18.1
	# ip route add default via 2001::1
	ip route add default via 157.122.27.2
	}
    }
    custom-config {
	custom-config-id service:StaticRoute
	custom-command StaticRoute
	config {
	files=('staticroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:StaticRoute:staticroute.sh
	custom-command staticroute.sh
	config {
	#!/bin/sh
	# auto-generated by StaticRoute service (utility.py)
	#
	# NOTE: this service must be customized to be of any use
	#       Below are samples that you can uncomment and edit.
	#
	# /sbin/ip route add XXXX via YYYY
	
	/sbin/ip route add 157.122.90.0/24 via 157.122.27.2
	/sbin/ip route add 157.122.57.0/24 via 157.122.27.2
	/sbin/ip route add 157.122.46.0/24 via 157.122.27.2
	
	/sbin/ip route add 157.122.42.0/24 via 157.122.27.2
	
	/sbin/ip route add 157.122.44.0/24 via 157.122.27.2
	}
    }
    custom-config {
	custom-config-id service:DHCP
	custom-command DHCP
	config {
	dirs=('/etc/dhcp', '/var/lib/dhcp', )
	files=('/etc/dhcp/dhcpd.conf', '/var/lib/dhcp/dhcpd.leases', )
	}
    }
    custom-config {
	custom-config-id service:DHCP:/var/lib/dhcp/dhcpd.leases
	custom-command /var/lib/dhcp/dhcpd.leases
	config {
	
	
	
	
	}
    }
    custom-config {
	custom-config-id service:DHCP:/etc/dhcp/dhcpd.conf
	custom-command /etc/dhcp/dhcpd.conf
	config {
	subnet 157.122.33.0 netmask 255.255.255.0 {
	  pool {
	    range 157.122.33.127 157.122.33.254;
	    default-lease-time 600;
	    option routers 157.122.33.1;
	    option domain-name "fit9137";
	    option domain-name-servers 157.122.46.12;
	  }
	}
	
	
	
	}
    }
    services {IPForward DefaultRoute StaticRoute DHCP}
    interface-peer {eth2 n8}
    interface-peer {eth0 n25}
    interface-peer {eth3 n5}
}

node n5 {
    type router
    model static
    network-config {
	hostname R2
	!
	interface eth3
	 ip address 157.122.90.2/24
	!
	interface eth0
	 ip address 157.122.57.2/24
	!
	interface eth2
	 ip address 157.122.18.2/24
	 ipv6 address 2001:0::2/64
	!
	interface eth1
	 ip address 157.122.42.1/24
	!
    }
    canvas c1
    iconcoords {432.0 433.0}
    labelcoords {432.0 401.0}
    services {IPForward DefaultRoute StaticRoute}
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	# ip route add default via 157.122.57.1
	# ip route add default via 157.122.42.1
	# ip route add default via 157.122.18.1
	# ip route add default via 2001::1
	# ip route add default via 157.122.90.1
	ip route add default via 157.122.57.1
	}
    }
    custom-config {
	custom-config-id service:StaticRoute
	custom-command StaticRoute
	config {
	files=('staticroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:StaticRoute:staticroute.sh
	custom-command staticroute.sh
	config {
	#!/bin/sh
	# auto-generated by StaticRoute service (utility.py)
	#
	# NOTE: this service must be customized to be of any use
	#       Below are samples that you can uncomment and edit.
	#
	# /sbin/ip route add XXXX via YYYY
	
	/sbin/ip route add 157.122.33.0/24 via 157.122.90.1
	/sbin/ip route add 157.122.46.0/24 via 157.122.57.1
	/sbin/ip route add 157.122.27.0/24 via 157.122.90.1
	
	/sbin/ip route add 157.122.44.0/24 via 157.122.90.1
	}
    }
    interface-peer {eth1 n7}
    interface-peer {eth0 n25}
    interface-peer {eth3 n8}
    interface-peer {eth2 n1}
}

node n6 {
    type lanswitch
    network-config {
	hostname switch1
	!
    }
    canvas c1
    iconcoords {550.0 137.0}
    labelcoords {550.0 113.0}
    interface-peer {e0 n1}
    interface-peer {e1 n11}
    interface-peer {e3 n10}
    interface-peer {e2 n12}
    interface-peer {e4 n13}
}

node n7 {
    type lanswitch
    network-config {
	hostname switch3
	!
    }
    canvas c1
    iconcoords {401.0 522.0}
    labelcoords {401.0 498.0}
    interface-peer {e3 n18}
    interface-peer {e0 n5}
}

node n10 {
    type router
    model PC
    network-config {
	hostname client1
	!
	interface eth0
	!
    }
    canvas c1
    iconcoords {508.0 69.0}
    labelcoords {508.0 37.0}
    services {DefaultRoute DHCPClient}
    custom-config {
	custom-config-id service:DHCPClient
	custom-command DHCPClient
	config {
	files=('startdhcpclient.sh', )
	}
    }
    custom-config {
	custom-config-id service:DHCPClient:startdhcpclient.sh
	custom-command startdhcpclient.sh
	config {
	#!/bin/sh
	# auto-generated by DHCPClient service (utility.py)
	# uncomment this mkdir line and symlink line to enable client-side DNS
	# resolution based on the DHCP server response.
	mkdir -p /var/run/resolvconf/interface
	ln -s /var/run/resolvconf/interface/eth0.dhclient /var/run/resolvconf/resolv.conf
	/sbin/dhclient -nw -pf /var/run/dhclient-eth0.pid -lf /var/run/dhclient-eth0.lease eth0
	
	}
    }
    interface-peer {eth0 n6}
}

node n11 {
    type router
    model PC
    network-config {
	hostname client2
	!
	interface eth0
	!
    }
    canvas c1
    iconcoords {556.0 194.0}
    labelcoords {556.0 162.0}
    services {DefaultRoute DHCPClient}
    interface-peer {eth0 n6}
    custom-config {
	custom-config-id service:DHCPClient
	custom-command DHCPClient
	config {
	files=('startdhcpclient.sh', )
	}
    }
    custom-config {
	custom-config-id service:DHCPClient:startdhcpclient.sh
	custom-command startdhcpclient.sh
	config {
	#!/bin/sh
	# auto-generated by DHCPClient service (utility.py)
	# uncomment this mkdir line and symlink line to enable client-side DNS
	# resolution based on the DHCP server response.
	mkdir -p /var/run/resolvconf/interface
	ln -s /var/run/resolvconf/interface/eth0.dhclient /var/run/resolvconf/resolv.conf
	/sbin/dhclient -nw -pf /var/run/dhclient-eth0.pid -lf /var/run/dhclient-eth0.lease eth0
	
	}
    }
}

node n12 {
    type router
    model PC
    network-config {
	hostname client3
	!
	interface eth0
	!
    }
    canvas c1
    iconcoords {650.0 146.0}
    labelcoords {650.0 114.0}
    services {DefaultRoute DHCPClient}
    custom-config {
	custom-config-id service:DHCPClient
	custom-command DHCPClient
	config {
	files=('startdhcpclient.sh', )
	}
    }
    custom-config {
	custom-config-id service:DHCPClient:startdhcpclient.sh
	custom-command startdhcpclient.sh
	config {
	#!/bin/sh
	# auto-generated by DHCPClient service (utility.py)
	# uncomment this mkdir line and symlink line to enable client-side DNS
	# resolution based on the DHCP server response.
	mkdir -p /var/run/resolvconf/interface
	ln -s /var/run/resolvconf/interface/eth0.dhclient /var/run/resolvconf/resolv.conf
	/sbin/dhclient -nw -pf /var/run/dhclient-eth0.pid -lf /var/run/dhclient-eth0.lease eth0
	
	}
    }
    interface-peer {eth0 n6}
}

node n13 {
    type router
    model PC
    network-config {
	hostname client4
	!
	interface eth0
	!
    }
    canvas c1
    iconcoords {639.0 75.0}
    labelcoords {639.0 43.0}
    services {DefaultRoute DHCPClient}
    custom-config {
	custom-config-id service:DHCPClient
	custom-command DHCPClient
	config {
	files=('startdhcpclient.sh', )
	}
    }
    custom-config {
	custom-config-id service:DHCPClient:startdhcpclient.sh
	custom-command startdhcpclient.sh
	config {
	#!/bin/sh
	# auto-generated by DHCPClient service (utility.py)
	# uncomment this mkdir line and symlink line to enable client-side DNS
	# resolution based on the DHCP server response.
	mkdir -p /var/run/resolvconf/interface
	ln -s /var/run/resolvconf/interface/eth0.dhclient /var/run/resolvconf/resolv.conf
	/sbin/dhclient -nw -pf /var/run/dhclient-eth0.pid -lf /var/run/dhclient-eth0.lease eth0
	
	}
    }
    interface-peer {eth0 n6}
}

node n24 {
    type router
    model host
    network-config {
	hostname dnsserver
	!
	interface eth0
	 ip address 157.122.46.12/24
	!
    }
    canvas c1
    iconcoords {137.0 168.0}
    labelcoords {137.0 136.0}
    custom-config {
	custom-config-id service:maradns
	custom-command maradns
	config {
	dirs=('/etc/maradns', )
	files=('/etc/maradns/mararc', '/etc/maradns/db.fit9137', '/etc/maradns/db.reverse', 'maradns.sh', )
	}
    }
    custom-config {
	custom-config-id service:maradns:maradns.sh
	custom-command maradns.sh
	config {
	#!/bin/sh
	# auto-generated for maradns
	maradns -f /etc/maradns/mararc
	}
    }
    custom-config {
	custom-config-id service:maradns:/etc/maradns/db.reverse
	custom-command /etc/maradns/db.reverse
	config {
	12.42.122.157.in-addr.arpa. PTR intranet.fit9137. ~
	11.46.122.157.in-addr.arpa. PTR www.fit9137. ~
	157.122.46.10.in-addr.arpa. PTR ssh.fit9137. ~
	
	}
    }
    custom-config {
	custom-config-id service:maradns:/etc/maradns/db.fit9137
	custom-command /etc/maradns/db.fit9137
	config {
	intranet.fit9137. 157.122.42.12 ~
	www.fit9137. 157.122.46.11 ~
	ssh.fit9137. 157.122.46.10 ~
	
	}
    }
    custom-config {
	custom-config-id service:maradns:/etc/maradns/mararc
	custom-command /etc/maradns/mararc
	config {
	ipv4_bind_addresses = "157.122.46.12/24"
	
	chroot_dir = "/etc/maradns"
	csv2 = {}
	csv2["fit9137."] = "db.fit9137"
	csv2["0.10.in-addr.arpa."] = "db.reverse"
	
	}
    }
    services {DefaultRoute SSH maradns}
    interface-peer {eth0 n2}
}

node n25 {
    type router
    model static
    network-config {
	hostname R3
	!
	interface eth0
	 ip address 157.122.50.1/24
	!
	interface eth2
	 ip address 157.122.57.1/24
	!
	interface eth1
	 ip address 157.122.95.2/24
	!
	interface eth3
	 ip address 157.122.46.1/24
	!
    }
    canvas c1
    iconcoords {227.0 340.0}
    labelcoords {227.0 308.0}
    custom-config {
	custom-config-id service:Firewall
	custom-command Firewall
	config {
	files=('firewall.sh', )
	}
    }
    custom-config {
	custom-config-id service:Firewall:firewall.sh
	custom-command firewall.sh
	config {
	iptables -P INPUT DROP
	iptables -P OUTPUT DROP
	iptables -P FORWARD DROP
	
	iptables -A FORWARD -i eth0 -o eth3 -d 157.122.46.11 -p tcp --dport 80 -j ACCEPT
	iptables -A FORWARD -i eth3 -o eth0 -s 157.122.46.11 -p tcp --sport 80 -j ACCEPT
	
	iptables -A FORWARD -i eth0 -o eth3 -d 157.122.46.10 -p tcp --dport 22 -j ACCEPT
	iptables -A FORWARD -i eth3 -o eth0 -s 157.122.46.10 -p tcp --sport 22 -j ACCEPT
	
	iptables -A FORWARD -i eth0 -o eth3 -d 157.122.46.12 -p udp --dport 53 -j ACCEPT
	iptables -A FORWARD -i eth3 -o eth0 -s 157.122.46.12 -p udp --sport 53 -j ACCEPT
	
	iptables -A FORWARD -p icmp -j ACCEPT -i eth0 -o eth3
	iptables -A FORWARD -p icmp -j ACCEPT -i eth3 -o eth0
	
	
	# b)
	iptables -A FORWARD -i eth2 -o eth3 -j ACCEPT
	
	
	# C)
	iptables -A FORWARD -i eth2 -o eth3 -m state --state RELATED,ESTABLISHED -j ACCEPT
	iptables -A FORWARD -i eth3 -o eth2 -m state --state RELATED,ESTABLISHED -j ACCEPT
	
	# D)
	iptables -A FORWARD -i eth3 -o eth2  -p tcp --dport 22 -j ACCEPT 
	
	# e)
	iptables -I INPUT ! -s 157.122.0.0/16 -j DROP
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 157.122.50.2
	# ip route add default via 157.122.95.1
	# ip route add default via 157.122.57.1
	# ip route add default via 157.122.46.1
	ip route add default via 157.122.50.2
	}
    }
    custom-config {
	custom-config-id service:StaticRoute
	custom-command StaticRoute
	config {
	files=('staticroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:StaticRoute:staticroute.sh
	custom-command staticroute.sh
	config {
	#!/bin/sh
	# auto-generated by StaticRoute service (utility.py)
	#
	# NOTE: this service must be customized to be of any use
	#       Below are samples that you can uncomment and edit.
	#
	# /sbin/ip route add XXXX via YYYY
	/sbin/ip route add 157.122.33.0/24 via 157.122.57.2
	/sbin/ip route add 157.122.90.0/24 via 157.122.57.2
	/sbin/ip route add 157.122.27.0/24 via 157.122.57.2
	
	/sbin/ip route add 157.122.42.0/24 via 157.122.57.2
	
	/sbin/ip route add 157.122.44.0/24 via 157.122.57.2
	
	/sbin/ip route add 192.168.200.0/24 via 157.122.50.2
	}
    }
    services {IPForward DefaultRoute StaticRoute Firewall}
    interface-peer {eth3 n2}
    interface-peer {eth2 n5}
    interface-peer {eth1 n1}
    interface-peer {eth0 n14}
}

node n18 {
    type router
    model host
    network-config {
	hostname intranet
	!
	interface eth0
	 ip address 157.122.42.12/24
	!
    }
    canvas c1
    iconcoords {279.0 511.0}
    labelcoords {279.0 479.0}
    services {DefaultRoute SSH HTTP}
    interface-peer {eth0 n7}
    custom-config {
	custom-config-id service:HTTP
	custom-command HTTP
	config {
	dirs=('/etc/apache2', '/var/run/apache2', '/var/log/apache2', '/var/lock/apache2', '/var/www', '/run/lock', )
	files=('/etc/apache2/apache2.conf', '/etc/apache2/envvars', '/var/www/index.html', )
	}
    }
    custom-config {
	custom-config-id service:HTTP:/var/www/index.html
	custom-command /var/www/index.html
	config {
	<html><body><!-- generated by utility.py:HttpService -->
	<h1>FIT9137 intranet web server</h1>
	<p>Congratulations! You have reached the intranet web server.</p>
	</body></html>
	}
    }
}

node n19 {
    type router
    model host
    network-config {
	hostname www
	!
	interface eth0
	 ip address 157.122.46.11/24
	!
    }
    canvas c1
    iconcoords {40.0 305.0}
    labelcoords {40.0 273.0}
    custom-config {
	custom-config-id service:HTTP
	custom-command HTTP
	config {
	dirs=('/etc/apache2', '/var/run/apache2', '/var/log/apache2', '/var/lock/apache2', '/var/www', '/run/lock', )
	files=('/etc/apache2/apache2.conf', '/etc/apache2/envvars', '/var/www/index.html', )
	}
    }
    custom-config {
	custom-config-id service:HTTP:/var/www/index.html
	custom-command /var/www/index.html
	config {
	<html><body><!-- generated by utility.py:HttpService -->
	<h1>Congratulations! You have reached the web server</h1>
	</body></html>
	}
    }
    services {DefaultRoute SSH HTTP}
    interface-peer {eth0 n2}
}

node n8 {
    type router
    model static
    network-config {
	hostname R4
	!
	interface eth0
	 ip address 157.122.27.2/24
	!
	interface eth2
	 ip address 157.122.44.1/24
	!
	interface eth1
	 ip address 157.122.90.1/24
	!
    }
    canvas c1
    iconcoords {629.0 313.0}
    labelcoords {629.0 281.0}
    interface-peer {eth0 n1}
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	# ip route add default via 157.122.27.1
	# ip route add default via 157.122.90.1
	# ip route add default via 157.122.44.1
	ip route add default via 157.122.90.2
	}
    }
    custom-config {
	custom-config-id service:StaticRoute
	custom-command StaticRoute
	config {
	files=('staticroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:StaticRoute:staticroute.sh
	custom-command staticroute.sh
	config {
	#!/bin/sh
	# auto-generated by StaticRoute service (utility.py)
	#
	# NOTE: this service must be customized to be of any use
	#       Below are samples that you can uncomment and edit.
	#
	# /sbin/ip route add XXXX via YYYY
	/sbin/ip route add 157.122.57.0/24 via 157.122.90.2
	/sbin/ip route add 157.122.33.0/24 via 157.122.27.1
	# /sbin/ip route add 157.122.57.0/24 via 157.122.90.2
	/sbin/ip route add 157.122.46.0/24 via 157.122.90.2
	
	/sbin/ip route add 157.122.42.0/24 via 157.122.90.2
	}
    }
    services {IPForward DefaultRoute StaticRoute}
    interface-peer {eth1 n5}
    interface-peer {eth2 n3}
}

node n2 {
    type lanswitch
    network-config {
	hostname switch4
	!
    }
    canvas c1
    iconcoords {143.0 254.0}
    labelcoords {143.0 230.0}
    interface-peer {e0 n25}
    interface-peer {e2 n19}
    interface-peer {e1 n9}
    interface-peer {e3 n24}
}

node n9 {
    type router
    model host
    network-config {
	hostname ssh
	!
	interface eth0
	 ip address 157.122.46.10/24
	!
    }
    canvas c1
    iconcoords {76.0 388.0}
    labelcoords {76.0 356.0}
    services {DefaultRoute SSH}
    interface-peer {eth0 n2}
}

node n3 {
    type lanswitch
    network-config {
	hostname switch2
	!
    }
    canvas c1
    iconcoords {640.0 474.0}
    labelcoords {675.0 457.0}
    interface-peer {e0 n8}
    interface-peer {e1 n4}
}

node n4 {
    type router
    model host
    network-config {
	hostname backup
	!
	interface eth0
	 ip address 157.122.44.10/24
	!
    }
    canvas c1
    iconcoords {536.0 512.0}
    labelcoords {562.0 478.0}
    interface-peer {eth0 n3}
}

node n14 {
    type router
    model static
    network-config {
	hostname External
	!
	interface eth1
	 ip address 192.168.200.1/24
	!
	interface eth0
	 ip address 157.122.50.2/24
	!
    }
    canvas c1
    iconcoords {151.0 516.0}
    labelcoords {151.0 548.0}
    interface-peer {eth0 n25}
    interface-peer {eth1 n15}
    custom-config {
	custom-config-id service:StaticRoute
	custom-command StaticRoute
	config {
	files=('staticroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:StaticRoute:staticroute.sh
	custom-command staticroute.sh
	config {
	#!/bin/sh
	# auto-generated by StaticRoute service (utility.py)
	#
	# NOTE: this service must be customized to be of any use
	#       Below are samples that you can uncomment and edit.
	#
	#/sbin/ip route add 10.9.8.0/24 via 157.122.50.1
	#/sbin/ip route add 10.9.8.0/24 via 192.168.200.1
	/sbin/ip route add 157.122.46.0/24 via 157.122.50.1
	}
    }
    custom-config {
	custom-config-id service:DHCP
	custom-command DHCP
	config {
	dirs=('/etc/dhcp', '/var/lib/dhcp', )
	files=('/etc/dhcp/dhcpd.conf', )
	cmdup=('dhcpd', 'touch /var/lib/dhcp/dhcpd.leases', )
	}
    }
    custom-config {
	custom-config-id service:DHCP:/etc/dhcp/dhcpd.conf
	custom-command /etc/dhcp/dhcpd.conf
	config {
	subnet 192.168.200.0 netmask 255.255.255.0 {
	  pool {
	    range 192.168.200.127 192.168.200.254;
	    default-lease-time 600;
	    option routers 192.168.200.1;
	    option domain-name "fit9137";
	    option domain-name-servers 157.122.46.12;
	  }
	}
	
	
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 157.122.50.1
	# ip route add default via 192.168.200.1
	
	}
    }
    services {IPForward DefaultRoute StaticRoute DHCP}
}

node n15 {
    type lanswitch
    network-config {
	hostname n15
	!
    }
    canvas c1
    iconcoords {179.0 647.0}
    labelcoords {179.0 671.0}
    interface-peer {e0 n14}
    interface-peer {e1 n16}
    interface-peer {e2 n17}
    interface-peer {e3 n20}
    interface-peer {e4 n21}
}

node n16 {
    type router
    model PC
    network-config {
	hostname Client4
	!
	interface eth0
	!
    }
    canvas c1
    iconcoords {322.0 643.0}
    labelcoords {322.0 675.0}
    interface-peer {eth0 n15}
    custom-config {
	custom-config-id service:DHCPClient
	custom-command DHCPClient
	config {
	files=('startdhcpclient.sh', )
	}
    }
    custom-config {
	custom-config-id service:DHCPClient:startdhcpclient.sh
	custom-command startdhcpclient.sh
	config {
	#!/bin/sh
	# auto-generated by DHCPClient service (utility.py)
	# uncomment this mkdir line and symlink line to enable client-side DNS
	# resolution based on the DHCP server response.
	mkdir -p /var/run/resolvconf/interface
	ln -s /var/run/resolvconf/interface/eth0.dhclient /var/run/resolvconf/resolv.conf
	/sbin/dhclient -nw -pf /var/run/dhclient-eth0.pid -lf /var/run/dhclient-eth0.lease eth0
	}
    }
    services {DefaultRoute DHCPClient}
}

node n17 {
    type router
    model PC
    network-config {
	hostname Client1
	!
	interface eth0
	!
    }
    canvas c1
    iconcoords {262.0 711.0}
    labelcoords {262.0 743.0}
    interface-peer {eth0 n15}
    custom-config {
	custom-config-id service:DHCPClient
	custom-command DHCPClient
	config {
	files=('startdhcpclient.sh', )
	}
    }
    custom-config {
	custom-config-id service:DHCPClient:startdhcpclient.sh
	custom-command startdhcpclient.sh
	config {
	#!/bin/sh
	# auto-generated by DHCPClient service (utility.py)
	# uncomment this mkdir line and symlink line to enable client-side DNS
	# resolution based on the DHCP server response.
	mkdir -p /var/run/resolvconf/interface
	ln -s /var/run/resolvconf/interface/eth0.dhclient /var/run/resolvconf/resolv.conf
	/sbin/dhclient -nw -pf /var/run/dhclient-eth0.pid -lf /var/run/dhclient-eth0.lease eth0
	}
    }
    services {DefaultRoute DHCPClient}
}

node n20 {
    type router
    model PC
    network-config {
	hostname Client2
	!
	interface eth0
	!
    }
    canvas c1
    iconcoords {130.0 714.0}
    labelcoords {130.0 746.0}
    interface-peer {eth0 n15}
    custom-config {
	custom-config-id service:DHCPClient
	custom-command DHCPClient
	config {
	files=('startdhcpclient.sh', )
	}
    }
    custom-config {
	custom-config-id service:DHCPClient:startdhcpclient.sh
	custom-command startdhcpclient.sh
	config {
	#!/bin/sh
	# auto-generated by DHCPClient service (utility.py)
	# uncomment this mkdir line and symlink line to enable client-side DNS
	# resolution based on the DHCP server response.
	mkdir -p /var/run/resolvconf/interface
	ln -s /var/run/resolvconf/interface/eth0.dhclient /var/run/resolvconf/resolv.conf
	/sbin/dhclient -nw -pf /var/run/dhclient-eth0.pid -lf /var/run/dhclient-eth0.lease eth0
	}
    }
    services {DefaultRoute DHCPClient}
}

node n21 {
    type router
    model PC
    network-config {
	hostname Client3
	!
	interface eth0
	!
    }
    canvas c1
    iconcoords {46.0 678.0}
    labelcoords {46.0 710.0}
    interface-peer {eth0 n15}
    custom-config {
	custom-config-id service:DHCPClient
	custom-command DHCPClient
	config {
	files=('startdhcpclient.sh', )
	}
    }
    custom-config {
	custom-config-id service:DHCPClient:startdhcpclient.sh
	custom-command startdhcpclient.sh
	config {
	#!/bin/sh
	# auto-generated by DHCPClient service (utility.py)
	# uncomment this mkdir line and symlink line to enable client-side DNS
	# resolution based on the DHCP server response.
	mkdir -p /var/run/resolvconf/interface
	ln -s /var/run/resolvconf/interface/eth0.dhclient /var/run/resolvconf/resolv.conf
	/sbin/dhclient -nw -pf /var/run/dhclient-eth0.pid -lf /var/run/dhclient-eth0.lease eth0
	
	}
    }
    services {DefaultRoute DHCPClient}
}

link l5 {
    nodes {n6 n1}
    bandwidth 0
}

link l7 {
    nodes {n11 n6}
    bandwidth 0
}

link l9 {
    nodes {n10 n6}
    bandwidth 0
}

link l8 {
    nodes {n12 n6}
    bandwidth 0
}

link l10 {
    nodes {n13 n6}
    bandwidth 0
}

link l13 {
    nodes {n18 n7}
}

link l15 {
    delay 100
    bandwidth 1000000000
    nodes {n1 n8}
}

link l6 {
    nodes {n7 n5}
}

link l1 {
    nodes {n25 n2}
}

link l12 {
    nodes {n19 n2}
}

link l3 {
    delay 100
    nodes {n5 n25}
    bandwidth 1000000000
}

link l19 {
    nodes {n9 n2}
}

link l11 {
    nodes {n2 n24}
}

link l16 {
    delay 100
    nodes {n8 n5}
    bandwidth 1000000000
}

link l2 {
    delay 110
    nodes {n1 n25}
    bandwidth 100000000
}

link l4 {
    nodes {n8 n3}
    bandwidth 0
}

link l14 {
    nodes {n3 n4}
    bandwidth 0
}

link l17 {
    delay 110
    nodes {n1 n5}
    bandwidth 100000000
}

link l18 {
    nodes {n25 n14}
    bandwidth 0
}

link l20 {
    nodes {n14 n15}
    bandwidth 0
}

link l21 {
    nodes {n15 n16}
    bandwidth 0
}

link l22 {
    nodes {n15 n17}
    bandwidth 0
}

link l23 {
    nodes {n15 n20}
    bandwidth 0
}

link l24 {
    nodes {n15 n21}
    bandwidth 0
}

annotation a1 {
    iconcoords {796.0 21.0}
    type text
    label {Student ID: 31009751
}
    labelcolor black
    fontfamily {Arial}
    fontsize {14}
    effects {bold}
    canvas c1
}

canvas c1 {
    name {Assignment2}
}

option global {
    interface_names no
    ip_addresses yes
    ipv6_addresses no
    node_labels yes
    link_labels yes
    show_api no
    background_images no
    annotations yes
    grid no
    traffic_start 1
}

option session {
    controlnet=
    enablerj45=0
    enablesdt=0
    preservedir=0
}

